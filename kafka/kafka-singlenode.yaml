apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
  name: kafka-0
  namespace: kafka
spec:
  ports:
    - port: 9092
      protocol: TCP
      targetPort: ${KAFKA_NODEPORT_0}
      nodePort: ${KAFKA_NODEPORT_0}
  selector:
    app: kafka
    run: kafka-0
  type: NodePort
status:
  loadBalancer: {}

---


apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-d-0
  namespace: kafka
  labels:
    app: kafka
spec:
  serviceName: kafka-0
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      run: kafka-0
  template:
    metadata:
      labels:
        app: kafka
        run: kafka-0
    spec:
      containers:
        - name: kafka-container
          image: 'bitnami/kafka:latest'
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: ${KAFKA_NODEPORT_0}
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka/data
#          lifecycle:
#            postStart:
#              exec:
#                command: ["/bin/sh", "-c", "sleep 10 && /opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper-service.zookeeper.svc.cluster.local:2181/${zk_node} --replication-factor 1 --partitions 1 --topic t-sn-02-p1-r1
#                && /opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper-service.zookeeper.svc.cluster.local:2181/${zk_node} --replication-factor 3 --partitions 1 --topic t-sn-01-p1-r3"]
          env:
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "INTERNAL://:9092,EXTERNAL://kube0:${KAFKA_NODEPORT_0}"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: "zookeeper-service.zookeeper.svc.cluster.local:2181/${zk_node}"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_LISTENERS
              value: "INTERNAL://:9092,EXTERNAL://:${KAFKA_NODEPORT_0}"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
      volumes:
      - name: kafka-data
        emptyDir: {}
#  volumeClaimTemplates:
#    - metadata:
#        name: kafka-data
#        namespace: kafka
#      spec:
#        accessModes: [ "ReadWriteOnce" ]
#        resources:
#          requests:
#            storage: 1Gi
